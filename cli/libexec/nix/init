#!/usr/bin/env bash
#
# Summary: Prepare a project for developing with nix
#
# Usage: {cmd}

set -e

if [ ! -e "flake.nix" ]; then
  cat <<FILE_FLAKENIX > flake.nix
{
inputs = {
  dotfiles.url = "$DOTFILES_HOME";
  nixpkgs.follows = "dotfiles/nixpkgs";
  devenv.follows = "dotfiles/devenv";
  systems.follows = "dotfiles/systems";
};

outputs = { self, nixpkgs, devenv, systems, ... } @ inputs:
  let
    forEachSystem = nixpkgs.lib.genAttrs (import systems);
  in
  {
    packages = forEachSystem (system: {
      devenv-up = self.devShells.\${system}.default.config.procfileScript;
    });

    devShells = forEachSystem
      (system:
        let
          pkgs = nixpkgs.legacyPackages.\${system};
        in
        {
          default = devenv.lib.mkShell {
            inherit inputs pkgs;
            modules = [
              {
                packages = with pkgs; [
                ];
              }
            ];
          };
        });
  };
}
FILE_FLAKENIX
fi

# Create direnv configuration if it doesn't exist
if [ ! -e ".envrc" ]; then
  echo use flake . --impure > .envrc
  direnv allow
fi

# nix flake needs these files to be at least tracked
if [ -e .git ]; then
  if [ -e flake.nix ]; then
    git add flake.nix
  fi
fi
